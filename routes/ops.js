// Generated by CoffeeScript 1.6.3
(function() {
  var FormData, fileupload, request, stream, util, weedMaster;

  request = require("request");

  stream = require("stream");

  FormData = require("form-data");

  weedMaster = "http://50.185.122.11:9333";

  util = require("util");

  exports.upload = function(req, res, err) {
    if (req.method === "GET") {
      return request(weedMaster + "/dir/assign", function(error, response, body) {
        var weedRes;
        weedRes = JSON.parse(body);
        return res.send(weedRes);
      });
    } else if (req.method === "POST") {
      return request(weedMaster + "/dir/assign", function(error, response, body) {
        var param, uploadEndpoint, weedRes;
        if (!error) {
          weedRes = JSON.parse(body);
          param = req.route.params[0];
          uploadEndpoint = "http://" + weedRes.publicUrl + "/" + (param === "" ? weedRes.fid : param);
          console.log("Upload Endpoint: " + uploadEndpoint);
          return fileupload(req, res, uploadEndpoint);
        } else {
          console.log("error: " + error);
          return res.send("{" + error + "}");
        }
      });
    }
  };

  fileupload = function(req, res, uploadEndpoint) {
    var poster;
    req.connection.setTimeout(10000);
    poster = request.post(uploadEndpoint, function(err, response, body) {
      var jsonbody;
      console.log(err + ":" + response.statusCode + ":" + body);
      jsonbody = JSON.parse(body);
      console.log("jsonbody: " + JSON.stringify(jsonbody));
      if (jsonbody.error !== undefined) {
        return console.log("Error ofcourse");
      }
    });
    return req.pipe(poster).pipe(res);
  };

  exports.sioupload = function(socket) {
    socket.on('send-file', function(name, buffer) {
      console.log("Name: " + name);
      return request(weedMaster + "/dir/assign", function(error, response, body) {
        var form, poster, uploadEndpoint, weedRes;
        if (!error) {
          weedRes = JSON.parse(body);
          uploadEndpoint = "http://" + weedRes.publicUrl + "/" + weedRes.fid;
          console.log("Upload Endpoint: " + uploadEndpoint);
          poster = request.post(uploadEndpoint, function(err, response, body) {
            var jsonbody;
            if (!err) {
              console.log("******" + response + "*****");
              jsonbody = JSON.parse(body);
              console.log("jsonbody: " + JSON.stringify(jsonbody));
              if (jsonbody.error !== undefined) {
                return console.log("Error ofcourse");
              }
            } else {
              return console.log("err");
            }
          });
          form = poster.form();
          return form.append("file", buffer);
        } else {
          console.log("error: " + error);
          return res.send("{" + error + "}");
        }
      });
    });
    socket.on('save-file', function(name, buffer) {
      var fs;
      fs = require('fs');
      /*
      stream = fs.createWriteStream(filename)
      stream.once 'open', (fd) ->
        stream.write buffer
        stream.end()
      */

      return fs.writeFileSync(name, buffer, "binary", function(err) {
        console.log(buffer.length);
        if (err) {
          return console.log("Error writing: " + err);
        } else {
          return request(weedMaster + "/dir/assign", function(error, response, body) {
            var form, poster, uploadEndpoint, weedRes;
            if (!error) {
              weedRes = JSON.parse(body);
              uploadEndpoint = "http://" + weedRes.publicUrl + "/" + weedRes.fid;
              console.log("Upload Endpoint: " + uploadEndpoint);
              poster = request.post(uploadEndpoint, function(err, response, body) {
                var jsonbody;
                if (!err) {
                  console.log("******" + response + "*****");
                  jsonbody = JSON.parse(body);
                  console.log("jsonbody: " + JSON.stringify(jsonbody));
                  if (jsonbody.error !== undefined) {
                    return console.log("Error ofcourse");
                  }
                }
              });
              form = poster.form();
              return form.append("file", fs.createReadStream(name));
            }
          });
        }
      });
    });
    return socket.on('test-stream', function(file, buffer) {
      var bufferStream, form;
      console.info("Size: " + file.size);
      form = new FormData();
      form.append("name", file.name);
      form.append("size", file.size);
      form.append("lastModifiedDate", file.lastModifiedDate);
      form.append("type", file.type);
      form.append("buffer", buffer);
      bufferStream = new stream.Transform();
      return request(weedMaster + "/dir/assign", function(error, response, body) {
        var uploadEndpoint, weedRes;
        if (!error) {
          weedRes = JSON.parse(body);
          uploadEndpoint = "http://" + weedRes.publicUrl + "/" + weedRes.fid;
          console.log("Upload Endpoint: " + uploadEndpoint);
          return form.submit(uploadEndpoint, function(err, res) {
            return res.resume();
          });
        }
      });
    });
  };

}).call(this);

/*
//@ sourceMappingURL=ops.map
*/
